datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  THERAPIST
  STAFF
}

enum AppointmentStatus {
  SCHEDULED
  PRESENT
  CANCELLED_ON_TIME
  CANCELLED_LATE
  NO_SHOW
}

model User {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  firstName    String?
  lastName     String?
  role         Role     @default(STAFF)
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  therapist    Therapist?
}

model Therapist {
  id           String @id @default(cuid())
  userId       String @unique
  user         User   @relation(fields: [userId], references: [id])
  specialty    String?
  notes        String?
  schedules    TherapistSchedule[]
  appointments Appointment[]
}

model Client {
  id           String   @id @default(cuid())
  fullName     String
  phone        String?
  email        String?  @unique
  startDate    DateTime?
  status       String   @default("ACTIVE")
  notes        String?
  appointments Appointment[]
}

model TherapistSchedule {
  id          String    @id @default(cuid())
  therapist   Therapist @relation(fields: [therapistId], references: [id])
  therapistId String
  weekday     Int
  startTime   String    // HH:mm
  endTime     String    // HH:mm
  slotMinutes Int       @default(45)
  isActive    Boolean   @default(true)
}

model Appointment {
  id          String      @id @default(cuid())
  client      Client      @relation(fields: [clientId], references: [id])
  clientId    String
  therapist   Therapist   @relation(fields: [therapistId], references: [id])
  therapistId String
  startDt     DateTime
  endDt       DateTime
  status      AppointmentStatus @default(SCHEDULED)
  isPaid      Boolean     @default(false)
  notes       String?

  @@unique([therapistId, startDt])
}
